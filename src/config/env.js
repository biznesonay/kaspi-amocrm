import dotenv from 'dotenv';
import { z } from 'zod';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
dotenv.config({ path: join(__dirname, '../../.env') });

// –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const envSchema = z.object({
  // Kaspi
  KASPI_API_TOKEN: z.string().min(1),
  KASPI_ALLOWED_STATES: z.string().min(1),
  KASPI_PAGE_SIZE: z.coerce.number().positive().default(100),
  
  // amoCRM
  AMO_BASE_URL: z.string().url(),
  AMO_CLIENT_ID: z.string().min(1),
  AMO_CLIENT_SECRET: z.string().min(1),
  AMO_REDIRECT_URI: z.string().url(),
  AMO_ACCESS_TOKEN: z.string().min(1),
  AMO_REFRESH_TOKEN: z.string().min(1),
  AMO_PIPELINE_ID: z.coerce.number().positive(),
  AMO_STATUS_ID: z.coerce.number().positive(),
  AMO_RPS: z.coerce.number().positive().max(7).default(6),
  
  // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  DB_CLIENT: z.enum(['sqlite', 'postgres']).default('sqlite'),
  DB_URL: z.string().min(1),
  
  // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  TIMEZONE: z.string().default('Asia/Almaty'),
  DRY_RUN: z.string().transform(val => val === 'true').default('false'),
  
  // –í–µ—Ä—Å–∏–∏ –∏ —Ñ–ª–∞–≥–∏
  KASPI_API_VERSION: z.string().default('v1'),
  AMO_API_VERSION: z.string().default('v4'),
  USE_FREE_POSITIONS: z.string().transform(val => val === 'true').default('true'),
  NOTE_TEMPLATE: z.string().default('–¢–æ–≤–∞—Ä—ã Kaspi: {{items}}. –ò—Ç–æ–≥–æ: {{total}} —Ç–≥.'),
  
  // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  ALERT_FAIL_STREAK: z.coerce.number().positive().default(3),
  ALERT_BACKLOG_THRESHOLD: z.coerce.number().positive().default(25),
  ALERT_HEARTBEAT_MINUTES: z.coerce.number().positive().default(5),
  
  // Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  ALERT_TELEGRAM_BOT_TOKEN: z.string().optional(),
  ALERT_TELEGRAM_CHAT_ID: z.string().optional(),
  
  // Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  ALERT_EMAIL_TO: z.string().email().optional(),
  ALERT_EMAIL_FROM: z.string().email().optional(),
  ALERT_EMAIL_SMTP_HOST: z.string().optional(),
  ALERT_EMAIL_SMTP_PORT: z.coerce.number().positive().optional(),
  ALERT_EMAIL_SMTP_USER: z.string().optional(),
  ALERT_EMAIL_SMTP_PASS: z.string().optional(),
  
  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  LOG_LEVEL: z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']).default('info'),
  LOG_PRETTY: z.string().transform(val => val === 'true').default('false'),
});

// –ü–∞—Ä—Å–∏–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
let config;
try {
  config = envSchema.parse(process.env);
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
  if (error instanceof z.ZodError) {
    error.errors.forEach(err => {
      console.error(`  - ${err.path.join('.')}: ${err.message}`);
    });
  }
  console.error('\nüìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ.');
  console.error('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .env.example –∫–∞–∫ —à–∞–±–ª–æ–Ω.');
  process.exit(1);
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤—ã—á–∏—Å–ª—è–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
config.KASPI_ALLOWED_STATES_ARRAY = config.KASPI_ALLOWED_STATES.split(',').map(s => s.trim());

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤
config.HAS_ALERT_CHANNEL = !!(
  (config.ALERT_TELEGRAM_BOT_TOKEN && config.ALERT_TELEGRAM_CHAT_ID) ||
  (config.ALERT_EMAIL_TO && config.ALERT_EMAIL_SMTP_HOST)
);

if (!config.HAS_ALERT_CHANNEL && !config.DRY_RUN) {
  console.warn('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∏ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤ (Telegram –∏–ª–∏ Email)');
  console.warn('   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–æ–≥–∞—Ö.');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
export default config; s